@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@model UserProductListDto

<h1>Sipariş Oluştur</h1>

<form id="productForm" asp-action="Create" method="post">
    <div class="form-group">
        <label for="UserId">Kullanıcılar</label>
        <select class="form-control" id="UserId" name="UserId" multiple>
            @foreach (var user in Model.AppUsers)
            {
                <option value="@user.Id">@user.UserName</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="productId">Ürün Seç</label>
        <select class="form-control" id="productId" name="productId">
            @foreach (var product in Model.Products)
            {
                <option value="@product.Id">@product.Name</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="quantity">Ürün Adedi</label>
        <input type="number" class="form-control" id="quantity" name="quantity" value="1" min="1" />
    </div>

    <label>Ürünler</label>
    <div id="productList" class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Ürün Adı</th>
                    <th>Ürün Adedi</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <!-- Buraya eklenen ürünler listelenecek -->
            </tbody>
        </table>
    </div>
    <button type="button" class="btn btn-dark" onclick="addProduct()">Ekle</button>
    <button type="submit" class="btn btn-primary">Kaydet</button>
    <a asp-action="Index" class="btn btn-warning">Sipariş Listesine Geri Dön</a>
</form>

<script>
    var productOrderIndex = 0; // Her ürün için benzersiz bir index

    function addProduct() {
        var productId = document.getElementById("productId").value;
        var productName = document.getElementById("productId").options[document.getElementById("productId").selectedIndex].text;
        var quantity = document.getElementById("quantity").value;

        // Ürünleri listelemek için HTML oluştur
        var newRow = `
                <tr>
                    <td>${productName}</td>
                    <td>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button type="button" class="btn btn-primary decrement-btn" onclick="decrementQuantity('quantity_${productOrderIndex}')">
                                    <i class="fa fa-minus"></i>
                                </button>
                            </div>
                            <input id="quantity_${productOrderIndex}" name="ProductOrders[${productOrderIndex}].Quantity" type="number" class="form-control bg-secondary text-center" value="${quantity}" min="1" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary increment-btn" onclick="incrementQuantity('quantity_${productOrderIndex}')">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger" onclick="removeProduct(this)">
                            <i class="fa fa-trash"></i>
                        </button>
                    </td>
                </tr>
            `;

        // Yeni ürünü listeye ekle
        var tableBody = document.getElementById("productList").getElementsByTagName("tbody")[0];
        tableBody.insertAdjacentHTML('beforeend', newRow);

        // Form verilerini güncelle
        var form = document.getElementById("productForm");
        var newInput1 = document.createElement("input");
        newInput1.setAttribute("type", "hidden");
        newInput1.setAttribute("name", "ProductOrders[" + productOrderIndex + "].ProductId");
        newInput1.setAttribute("value", productId);
        form.appendChild(newInput1);

        var newInput2 = document.createElement("input");
        newInput2.setAttribute("type", "hidden");
        newInput2.setAttribute("name", "ProductOrders[" + productOrderIndex + "].ProductName");
        newInput2.setAttribute("value", productName);
        form.appendChild(newInput2);

        var newInput3 = document.createElement("input");
        newInput3.setAttribute("type", "hidden");
        newInput3.setAttribute("name", "ProductOrders[" + productOrderIndex + "].Quantity");
        newInput3.setAttribute("value", quantity);
        form.appendChild(newInput3);

        // Indexi arttır
        productOrderIndex++;
    }

    function removeProduct(button) {
        var row = button.closest("tr");
        row.remove();
    }

    function decrementQuantity(quantityId) {
        var input = document.getElementById(quantityId);
        var value = parseInt(input.value, 10);
        if (value > 1) {
            input.value = value - 1;
        }
    }

    function incrementQuantity(quantityId) {
        var input = document.getElementById(quantityId);
        var value = parseInt(input.value, 10);
        input.value = value + 1;
    }
</script>
